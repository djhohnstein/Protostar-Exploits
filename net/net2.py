import socket
from struct import pack, unpack
from binascii import hexlify


HOST="localhost"
PORT=2997

conn = (HOST, PORT)

s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)

s.connect(conn)

total = 0

for i in xrange(4):
    # Loop through 
    data = s.recv(4)
    print "[+] Number %d: %s (%s)" % (i, data, hexlify(data))
    val = unpack("<I", data)[0]
    total += val

# Four random integers can exceed 4 bytes, resulting in overflow.
# Apply 32 bit mask

total = total & 0xffffffff
print "[+] Total: %d (%x)" % (total, total)
total = pack("<I", total)
s.sendall(total)


    val = int(hexlify(data), 16) # convert to int

    # convert to LE. Reason being sending across network
    # converts to Big E

    val = pack("<I", val)
    val = int(hexlify(val), 16) # convert to int


    print "[+] Sending back: %d (%x)" % (val, val)
    s.sendall("%d\r\n" % val)
    data = s.recv(2048)
    print data

s.close()